{"version":3,"file":"index-00e608f5.js","sources":["../src/Base/Button.tsx","../src/Base/CheckBox.tsx","../src/Base/FieldSet.tsx","../src/Base/FormSection.tsx","../src/Base/Input.tsx","../src/Base/Radio.tsx","../src/Base/Select.tsx","../src/Base/TextArea.tsx"],"sourcesContent":["import React, { ButtonHTMLAttributes } from \"react\";\n\nexport interface IButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n}\nexport const Button: React.FunctionComponent<IButtonProps> = ({children=\"Submit\", type=\"submit\", ...attributes}) => {\n  return (\n    <button\n      type={type}\n      className=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-800 hover:bg-blue-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      {...attributes}\n    >\n      {children}\n    </button>\n  );\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nexport interface ICheckBoxProps extends Omit<React.HTMLProps<HTMLInputElement>, \"size\">{\n  label: string;\n  description?: string;\n  size?: \"small\" | \"medium\" | \"large\";\n}\n\nexport const CheckBox = ({\n  label,\n  description,\n  size = \"small\",\n  ...inputProps\n}: ICheckBoxProps) => {\n  return (\n    <div className=\"flex items-start\">\n      <div className=\"flex items-center h-5\">\n        <input\n          type=\"checkbox\"\n          className={classNames(\"focus:ring-blue-500 text-blue-600 border-gray-300 rounded\", {\"h-4 w-4\": size === \"small\", \"h-6 w-6\": size === \"medium\", \"h-8 w-8\": size === \"large\"})}\n          {...inputProps}\n        />\n      </div>\n      <div className={classNames({\"ml-2 text-sm\": size ===  \"small\", \"ml-3 text-lg\": size === \"medium\", \"ml-4 text-xl\": size === \"large\"})}>\n        <label\n          htmlFor={inputProps.name}\n          className=\"font-medium text-gray-700\"\n        >\n          {label}\n        </label>\n        <p className=\"text-gray-500 text-sm\">{description}</p>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport interface IFieldSetProps extends React.HTMLProps<HTMLFieldSetElement>{\n    label: string;\n    description?: string;\n}\n\nexport type IFieldSetRefProps = React.PropsWithoutRef<IFieldSetProps> & React.RefAttributes<HTMLFieldSetElement>\n\nexport const FieldSet = React.forwardRef<HTMLFieldSetElement,IFieldSetProps>(({label, className, description, children, ...fieldsetProps}, ref) => {\n  return (\n    <fieldset ref={ref} className={className} {...fieldsetProps}>\n      <legend className=\"text-base font-medium text-gray-700\">{label}</legend>\n      {description && (<p className=\"text-sm text-gray-500\">{description}</p>)}\n      <div className=\"mt-2 space-y-4\">\n       {children} \n      </div>\n    </fieldset>\n  );\n});\n","import { Button } from \"./Button\";\nimport React, { useState } from \"react\";\n\nexport interface IFormSectionProps extends React.HTMLProps<HTMLFormElement> {}\n\nexport const FormSection: React.FunctionComponent<IFormSectionProps> = ({\n  children,\n  onSubmit,\n  ...formProps\n}) => {\n  const [isSubmitted, setIsSubmitted] = useState<boolean>(false)\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>)=>{\n    onSubmit && onSubmit(event)\n    setIsSubmitted(true)\n    event.preventDefault()\n  }\n  return (\n    <form onSubmit={handleSubmit} {...formProps}>\n      <div className=\"shadow sm:rounded-md sm:overflow-hidden\">\n        <div className=\"px-4 py-5 bg-white space-y-6 sm:p-6\">{children}</div>\n        <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n          {isSubmitted && (<i className=\"fas fa-check text-green-500 px-3 text-xl align-bottom\"/>)}\n          <span className=\"inline-flex rounded-md shadow-sm\">\n            <Button/>\n          </span>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nexport type ValidationStatus = \"valid\" | \"invalid\" | \"required\" | \"\";\n\ntype InputType =\n  | \"text\"\n  | \"password\"\n  | \"email\"\n  | \"number\"\n  | \"url\"\n  | \"date\"\n  | \"datetime-local\"\n  | \"month\"\n  | \"week\"\n  | \"time\"\n  | \"search\"\n  | \"tel\";\nexport interface IInputProps extends React.HTMLProps<HTMLInputElement> {\n  label?: string;\n  type?: InputType;\n  prefix?: string;\n  suffix?: string;\n  status?: ValidationStatus;\n}\n\nexport const Input = React.forwardRef<HTMLInputElement, IInputProps>(\n  (props, ref) => {\n    const {\n      label,\n      name,\n      className,\n      status,\n      prefix,\n      suffix,\n      type = \"text\",\n      ...inputProps\n    } = props;\n    return (\n      <div className={className}>\n        {label && (\n          <label className=\"block\" htmlFor={name}>\n            <span className=\"text-gray-700\">{label}</span>\n          </label>\n        )}\n        <div className=\"mt-1 flex rounded-md shadow-sm relative\">\n          {status && <div className=\"absolute -l-100\">{status}</div>}\n          {prefix && (\n            <span className=\"inline-flex items-center text-sm px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500\">\n              {prefix}\n            </span>\n          )}\n          <input\n            ref={ref}\n            type={type}\n            name={name}\n            className={classNames(\n              \"block w-full flex-1 sm:text-sm focus:ring-blue-200 focus:border-blue-300 border-gray-300\",\n              {\n                \"rounded-none rounded-r-md\": !!prefix && !suffix,\n                \"rounded-none rounded-l-md\": !!suffix && !prefix,\n                \"rounded-md\": !suffix && !prefix,\n                \"rounded-none\": !!prefix && !!suffix,\n              }\n            )}\n            {...inputProps}\n          />\n          {suffix && (\n            <span className=\"inline-flex items-center text-sm px-3 rounded-r-md border border-l-0 border-gray-300 bg-gray-50 text-gray-500\">\n              {suffix}\n            </span>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nexport interface IRadioProps extends Omit<React.HTMLProps<HTMLInputElement>, \"size\"> {\n  label: string;\n  size?: \"small\" | \"medium\" | \"large\";\n}\n\nexport const Radio = ({\n  label,\n  size = \"small\",\n  ...radioProps\n  \n}: IRadioProps) => {\n  return (\n    <div className=\"flex items-center\">\n        <input\n          type=\"radio\"\n          className={classNames(\"focus:ring-blue-500 text-blue-600 border-gray-300\", {\"h-4 w-4\": size === \"small\", \"h-6 w-6\": size === \"medium\", \"h-8 w-8\": size === \"large\"})}\n          {...radioProps}\n        />\n        <label\n          htmlFor={radioProps.name}\n          className={classNames(\"font-medium text-gray-700 block\", {\"text-sm ml-2\": size===\"small\", \"text-lg ml-3\": size===\"medium\", \"text-xl ml-4\": size===\"large\"})}\n        >\n          {label}\n        </label>\n    </div>\n  );\n};\n","import React from \"react\";\ntype ValidationStatus = \"valid\" | \"invalid\" | \"required\" | \"\";\n\nexport interface ISelectProps extends React.HTMLProps<HTMLSelectElement> {\n  label?: string;\n  defaultEmpty?: boolean;\n  emptyText?: string;\n  options: string[];\n  status?: ValidationStatus\n}\n\nexport const Select = React.forwardRef<HTMLSelectElement,ISelectProps>((props, ref) => {\n  const {\n    label,\n    options,\n    defaultEmpty=true,\n    emptyText=\"\",\n    className,\n    status,\n    ...selectProps\n  } = props;\n  return (\n    <div className={className}>\n    {label && (<label htmlFor={selectProps.name} className=\"block text-sm font-medium text-gray-700\">{label}</label>)}\n    <select ref={ref}  name={selectProps.name} defaultValue={defaultEmpty ? emptyText : undefined} className=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm\" {...selectProps} >\n      {defaultEmpty && (<option disabled>{emptyText}</option>)}\n      {options.map(option=><option key={option}>{option}</option>)}\n    </select>\n  </div> \n  );\n});\n","import React from \"react\";\n\nexport interface ITextAreaProps extends React.HTMLProps<HTMLTextAreaElement> {\n  label?: string;\n  description?: string;\n  rows?:number;\n}\n\nexport const TextArea: React.FunctionComponent<ITextAreaProps> = (props) => {\n  const {\n    label = \"Label text\",\n    name,\n    description,\n    className,\n    ...attributes\n  } = props;\n  return (\n    <div className={className}>\n      <label htmlFor={name} className=\"block text-sm font-medium text-gray-700\">\n        {label}\n      </label>\n      <div className=\"mt-1\">\n        <textarea\n          name={name}\n          className=\"hadow-sm focus:ring-blue-200 focus:border-blue-300 mt-1 block w-full sm:text-sm border-gray-300 rounded-md\"\n          {...attributes}\n        ></textarea>\n      </div>\n      {description && (\n        <p className=\"mt-2 text-sm text-gray-500\">{description}</p>\n      )}\n    </div>\n  );\n};\n"],"names":["React","classNames"],"mappings":";;;IAIa,MAAM,GAA0C,UAAC,EAAiD;IAAhD,IAAA,gBAAiB,EAAjB,QAAQ,mBAAC,QAAQ,KAAA,EAAE,YAAa,EAAb,IAAI,mBAAC,QAAQ,KAAA,EAAK,UAAU,cAAhD,oBAAiD,CAAD;IAC5G,QACEA,kDACE,IAAI,EAAE,IAAI,EACV,SAAS,EAAC,4NAA4N,IAClO,UAAU,GAEb,QAAQ,CACF,EACT;AACJ;;ICLa,QAAQ,GAAG,UAAC,EAKR;IAJf,IAAA,KAAK,WAAA,EACL,WAAW,iBAAA,EACX,YAAc,EAAd,IAAI,mBAAG,OAAO,KAAA,EACX,UAAU,cAJU,gCAKxB,CADc;IAEb,QACEA,sCAAK,SAAS,EAAC,kBAAkB;QAC/BA,sCAAK,SAAS,EAAC,uBAAuB;YACpCA,iDACE,IAAI,EAAC,UAAU,EACf,SAAS,EAAEC,UAAU,CAAC,2DAA2D,EAAE,EAAC,SAAS,EAAE,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,IAAI,KAAK,QAAQ,EAAE,SAAS,EAAE,IAAI,KAAK,OAAO,EAAC,CAAC,IACxK,UAAU,EACd,CACE;QACND,sCAAK,SAAS,EAAEC,UAAU,CAAC,EAAC,cAAc,EAAE,IAAI,KAAM,OAAO,EAAE,cAAc,EAAE,IAAI,KAAK,QAAQ,EAAE,cAAc,EAAE,IAAI,KAAK,OAAO,EAAC,CAAC;YAClID,wCACE,OAAO,EAAE,UAAU,CAAC,IAAI,EACxB,SAAS,EAAC,2BAA2B,IAEpC,KAAK,CACA;YACRA,oCAAG,SAAS,EAAC,uBAAuB,IAAE,WAAW,CAAK,CAClD,CACF,EACN;AACJ;;IC1Ba,QAAQ,GAAGA,cAAK,CAAC,UAAU,CAAqC,UAAC,EAA2D,EAAE,GAAG;IAA/D,IAAA,KAAK,WAAA,EAAE,SAAS,eAAA,EAAE,WAAW,iBAAA,EAAE,QAAQ,cAAA,EAAK,aAAa,cAA1D,iDAA2D,CAAD;IACtI,QACEA,oDAAU,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE,SAAS,IAAM,aAAa;QACzDA,yCAAQ,SAAS,EAAC,qCAAqC,IAAE,KAAK,CAAU;QACvE,WAAW,KAAKA,oCAAG,SAAS,EAAC,uBAAuB,IAAE,WAAW,CAAK,CAAC;QACxEA,sCAAK,SAAS,EAAC,gBAAgB,IAC7B,QAAQ,CACJ,CACG,EACX;AACJ,CAAC;;ICdY,WAAW,GAA+C,UAAC,EAIvE;IAHC,IAAA,QAAQ,cAAA,EACR,QAAQ,cAAA,EACL,SAAS,cAH0D,wBAIvE,CADa;IAEN,IAAA,KAAgC,QAAQ,CAAU,KAAK,CAAC,EAAvD,WAAW,QAAA,EAAE,cAAc,QAA4B,CAAA;IAC9D,IAAM,YAAY,GAAG,UAAC,KAAuC;QAC3D,QAAQ,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAA;QAC3B,cAAc,CAAC,IAAI,CAAC,CAAA;QACpB,KAAK,CAAC,cAAc,EAAE,CAAA;KACvB,CAAA;IACD,QACEA,gDAAM,QAAQ,EAAE,YAAY,IAAM,SAAS;QACzCA,sCAAK,SAAS,EAAC,yCAAyC;YACtDA,sCAAK,SAAS,EAAC,qCAAqC,IAAE,QAAQ,CAAO;YACrEA,sCAAK,SAAS,EAAC,yCAAyC;gBACrD,WAAW,KAAKA,oCAAG,SAAS,EAAC,uDAAuD,GAAE,CAAC;gBACxFA,uCAAM,SAAS,EAAC,kCAAkC;oBAChDA,6BAAC,MAAM,OAAE,CACJ,CACH,CACF,CACD,EACP;AACJ;;ICJa,KAAK,GAAGA,cAAK,CAAC,UAAU,CACnC,UAAC,KAAK,EAAE,GAAG;IAEP,IAAA,KAAK,GAQH,KAAK,MARF,EACL,IAAI,GAOF,KAAK,KAPH,EACJ,SAAS,GAMP,KAAK,UANE,EACT,MAAM,GAKJ,KAAK,OALD,EACN,MAAM,GAIJ,KAAK,OAJD,EACN,MAAM,GAGJ,KAAK,OAHD,EACN,KAEE,KAAK,KAFM,EAAb,IAAI,mBAAG,MAAM,KAAA,EACV,UAAU,UACX,KAAK,EATH,oEASL,CADc,CACL;IACV,QACEA,sCAAK,SAAS,EAAE,SAAS;QACtB,KAAK,KACJA,wCAAO,SAAS,EAAC,OAAO,EAAC,OAAO,EAAE,IAAI;YACpCA,uCAAM,SAAS,EAAC,eAAe,IAAE,KAAK,CAAQ,CACxC,CACT;QACDA,sCAAK,SAAS,EAAC,yCAAyC;YACrD,MAAM,IAAIA,sCAAK,SAAS,EAAC,iBAAiB,IAAE,MAAM,CAAO;YACzD,MAAM,KACLA,uCAAM,SAAS,EAAC,+GAA+G,IAC5H,MAAM,CACF,CACR;YACDA,iDACE,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,SAAS,EAAEC,UAAU,CACnB,0FAA0F,EAC1F;oBACE,2BAA2B,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,MAAM;oBAChD,2BAA2B,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,MAAM;oBAChD,YAAY,EAAE,CAAC,MAAM,IAAI,CAAC,MAAM;oBAChC,cAAc,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM;iBACrC,CACF,IACG,UAAU,EACd;YACD,MAAM,KACLD,uCAAM,SAAS,EAAC,+GAA+G,IAC5H,MAAM,CACF,CACR,CACG,CACF,EACN;AACJ,CAAC;;IClEU,KAAK,GAAG,UAAC,EAKR;IAJZ,IAAA,KAAK,WAAA,EACL,YAAc,EAAd,IAAI,mBAAG,OAAO,KAAA,EACX,UAAU,cAHO,iBAKrB,CAFc;IAGb,QACEA,sCAAK,SAAS,EAAC,mBAAmB;QAC9BA,iDACE,IAAI,EAAC,OAAO,EACZ,SAAS,EAAEC,UAAU,CAAC,mDAAmD,EAAE,EAAC,SAAS,EAAE,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,IAAI,KAAK,QAAQ,EAAE,SAAS,EAAE,IAAI,KAAK,OAAO,EAAC,CAAC,IAChK,UAAU,EACd;QACFD,wCACE,OAAO,EAAE,UAAU,CAAC,IAAI,EACxB,SAAS,EAAEC,UAAU,CAAC,iCAAiC,EAAE,EAAC,cAAc,EAAE,IAAI,KAAG,OAAO,EAAE,cAAc,EAAE,IAAI,KAAG,QAAQ,EAAE,cAAc,EAAE,IAAI,KAAG,OAAO,EAAC,CAAC,IAE1J,KAAK,CACA,CACN,EACN;AACJ;;IClBa,MAAM,GAAGD,cAAK,CAAC,UAAU,CAAiC,UAAC,KAAK,EAAE,GAAG;QAE9E,KAAK,GAOH,KAAK,MAPF,EACL,OAAO,GAML,KAAK,QANA,EACP,KAKE,KAAK,aALU,EAAjB,YAAY,mBAAC,IAAI,KAAA,EACjB,KAIE,KAAK,UAJK,EAAZ,SAAS,mBAAC,EAAE,KAAA,EACZ,SAAS,GAGP,KAAK,UAHE,EAGP,KAAK,OAFD,MACH,WAAW,UACZ,KAAK,EARH,wEAQL,EAAS;IACV,QACEA,sCAAK,SAAS,EAAE,SAAS;QACxB,KAAK,KAAKA,wCAAO,OAAO,EAAE,WAAW,CAAC,IAAI,EAAE,SAAS,EAAC,yCAAyC,IAAE,KAAK,CAAS,CAAC;QACjHA,kDAAQ,GAAG,EAAE,GAAG,EAAG,IAAI,EAAE,WAAW,CAAC,IAAI,EAAE,YAAY,EAAE,YAAY,GAAG,SAAS,GAAG,SAAS,EAAE,SAAS,EAAC,0JAA0J,IAAK,WAAW;YAChR,YAAY,KAAKA,yCAAQ,QAAQ,UAAE,SAAS,CAAU,CAAC;YACvD,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM,IAAE,OAAAA,yCAAQ,GAAG,EAAE,MAAM,IAAG,MAAM,CAAU,GAAA,CAAC,CACrD,CACL,EACJ;AACJ,CAAC;;ICtBY,QAAQ,GAA4C,UAAC,KAAK;IAEnE,IAAA,KAKE,KAAK,MALa,EAApB,KAAK,mBAAG,YAAY,KAAA,EACpB,IAAI,GAIF,KAAK,KAJH,EACJ,WAAW,GAGT,KAAK,YAHI,EACX,SAAS,GAEP,KAAK,UAFE,EACN,UAAU,UACX,KAAK,EANH,6CAML,CADc,CACL;IACV,QACEA,sCAAK,SAAS,EAAE,SAAS;QACvBA,wCAAO,OAAO,EAAE,IAAI,EAAE,SAAS,EAAC,yCAAyC,IACtE,KAAK,CACA;QACRA,sCAAK,SAAS,EAAC,MAAM;YACnBA,oDACE,IAAI,EAAE,IAAI,EACV,SAAS,EAAC,4GAA4G,IAClH,UAAU,EACJ,CACR;QACL,WAAW,KACVA,oCAAG,SAAS,EAAC,4BAA4B,IAAE,WAAW,CAAK,CAC5D,CACG,EACN;AACJ;;;;;;;;;;;;;;;;"}